javascript:(function()%7Bwindow.open %3D function() %7B%0A  console.log('Attempt to open a new window or tab blocked.')%3B%0A  return null%3B %2F%2F Prevents opening a new window or tab%0A%7D%3B%0A%0A%2F%2F Function to simulate a click on an element%0Afunction clickElement(element) %7B%0A  const clickEvent %3D new MouseEvent('click'%2C %7B%0A    view%3A window%2C%0A    bubbles%3A true%2C%0A    cancelable%3A true%2C%0A  %7D)%3B%0A  element.dispatchEvent(clickEvent)%3B%0A%7D%0A%0A%2F%2F Function to close the popup if the close button exists%0Afunction closePopup() %7B%0A  const closeButton %3D document.querySelector('button.absolute.rounded-sm.opacity-70.right-5.top-6.sm%5C%5C%3Aright-9.sm%5C%5C%3Atop-9')%3B%0A  if (closeButton) %7B%0A    clickElement(closeButton)%3B%0A    console.log('Popup closed.')%3B%0A  %7D%0A%7D%0A%0A%2F%2F Function to check for the claim button and click it if found%0Afunction checkClaimButton() %7B%0A  const claimButton %3D document.querySelector('button.inline-flex.bg-primary%3Anot(%5Bdisabled%5D).font-bold.px-6.w-full')%3B%0A  if (claimButton) %7B%0A    clickElement(claimButton)%3B%0A    console.log('Claim button clicked')%3B%0A    setTimeout(closePopup%2C 2000)%3B %2F%2F Close the popup after 2 seconds%0A    return true%3B%0A  %7D%0A  return false%3B%0A%7D%0A%0A%2F%2F Function to check conditions and retry the process if necessary%0Afunction checkConditionsAndRetry() %7B%0A  const elementsToWaitFor %3D document.querySelectorAll('.text-size-14.font-bold')%3B%0A  const successIcons %3D document.querySelectorAll('svg%5Bdata-state%3D"closed"%5D .ml-4.flex.gap-4.items-center')%3B%0A  %0A  if (elementsToWaitFor.length > 0 %7C%7C successIcons.length !%3D%3D elementsToClick.length) %7B%0A    setTimeout(processElements%2C 60000)%3B %2F%2F Retry after 60 seconds if conditions are not met%0A  %7D else %7B%0A    checkClaimButton()%3B%0A  %7D%0A%7D%0A%0A%2F%2F Function to handle clicking through all necessary elements%0Afunction processElements() %7B%0A  alert('Galxe Auto Complete tasks')%3B%0A  %0A  %2F%2F Try clicking the claim button first%0A  if (!checkClaimButton()) %7B%0A    %2F%2F If the claim button is not found%2C click other elements%0A    elementsToClick.forEach(clickElement)%3B%0A    setTimeout(() %3D> %7B%0A      const refreshButtons %3D document.querySelectorAll('button%5Bdata-state%3D"closed"%5D .ml-5.flex.gap-4.items-center svg')%3B%0A      refreshButtons.forEach(clickElement)%3B%0A      setTimeout(checkConditionsAndRetry%2C 2000)%3B %2F%2F Check conditions and retry after 2 seconds%0A    %7D%2C 2000)%3B%0A  %7D%0A%7D%0A%0A%2F%2F Function to find and click all elements with the specific classes%0Afunction clickTargetElements() %7B%0A  %2F%2F Selector targeting the parent span that includes specific class attributes%0A  const targetSelector %3D '%5Bclass*%3D"text-size-16"%5D%5Bclass*%3D"hover%3Atext-text-linkBase"%5D'%3B%0A%0A  %2F%2F Find all matching elements%0A  const elementsToClick %3D document.querySelectorAll(targetSelector)%3B%0A%0A  %2F%2F Loop through each element and click it%0A  elementsToClick.forEach(clickElement)%3B%0A%7D%0A%0A%2F%2F Execute the function to click the elements with specific attributes%0AclickTargetElements()%3B%0A%0A%2F%2F Find elements to click initially%0Aconst elementsToClick %3D document.querySelectorAll('div%5Bdata-state%3D"closed"%5D .cursor-pointer')%3B%0A%0A%2F%2F Start the main process%0AprocessElements()%3B%7D)()%3B
